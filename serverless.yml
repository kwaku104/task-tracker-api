# serverless.yml

service: task-tracker-api

custom:
  tableName: 'tasks-table-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["TasksDynamoDBTable", "Arn" ] }
  environment:
    TASKS_TABLE: ${self:custom.tableName}

functions:
  app:
    handler: app.handler
    events:
      - http: ANY /
      - http: 'ANY {id}'
  getTasks:
    handler: app.handler
    events:
      - http: 'GET /tasks'
  getTask:
    handler: app.handler
    events:
      - http: 'GET /tasks/{id}'
  createTask:
    handler: app.handler
    events:
      - http: 'POST /tasks'
  updateTask:
    handler: app.handler
    events:
      - http: 'PUT /tasks/{id}'
  deleteTask:
    handler: app.handler
    events:
      - http: 'DELETE /tasks/{id}'

resources:
  Resources:
    TasksDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}